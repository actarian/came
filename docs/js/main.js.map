{"version":3,"names":[],"mappings":"","sources":["main.ts"],"sourcesContent":["import MtmDataService from \"./models/mtm-data.service\";\nimport Dom from \"./utils/dom\";\n\nexport default class MtmConfigurator {\n\n\telement: HTMLElement;\n\n\tconstructor(selector: string) {\n\t\tthis.element = document.querySelector(selector) as HTMLElement;\n\t\tthis.addMediaScrollListener();\n\t\tthis.addRecapScrollListener();\n\t\tMtmDataService.fetch();\n\t}\n\n\taddMediaScrollListener() {\n\t\tconst media = this.element.querySelector('.media') as HTMLElement;\n\t\tconst picture = media.querySelector('.picture') as HTMLElement;\n\t\twindow.addEventListener('scroll', () => {\n\t\t\tconst rect: ClientRect | DOMRect = media.getBoundingClientRect();\n\t\t\tif (rect.top < 60) {\n\t\t\t\tDom.addClass(picture, 'fixed');\n\t\t\t} else {\n\t\t\t\tDom.removeClass(picture, 'fixed');\n\t\t\t}\n\t\t}, false);\n\t}\n\n\taddRecapScrollListener() {\n\t\tconst inner = this.element.querySelector('.section--recap > .inner') as HTMLElement;\n\t\tvar lastScrollTop = Dom.scrollTop();\n\t\twindow.addEventListener('scroll', () => {\n\t\t\tvar scrollTop = Dom.scrollTop();\n\t\t\tif (scrollTop > lastScrollTop) {\n\t\t\t\tDom.addClass(inner, 'fixed');\n\t\t\t} else {\n\t\t\t\tDom.removeClass(inner, 'fixed');\n\t\t\t}\n\t\t\tlastScrollTop = scrollTop <= 0 ? 0 : scrollTop; // For Mobile or negative scrolling\n\t\t}, false);\n\t}\n\n}\n\nconst configurator = new MtmConfigurator(`.configurator`);\n\n"],"file":"main.js"}